@model PrototypeTopCoder.Models.ComplexTestProblemModel

@{
    ViewBag.Title = "ComplexTestProblem";
}

<h2>CreateSimpleTestProblem</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm("CreateComplexTestProblem","Admin", new {id = (string)Request.RequestContext.RouteData.Values["id"]})) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>ComplexTestProblem</legend>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Question)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Question)
            @Html.ValidationMessageFor(model => model.Question)
        </div>

        @for (int i = 0; i < 4; i++)
        {
        <div class="editor-label">
            @Html.Label("Option " + i)
        </div>
        <div class="editor-field">
            @Html.TextBox("Options["+i+"]") 
            @Html.TextBox("CorrectAnswers[" + i + "]") 
        </div>
        }


        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
