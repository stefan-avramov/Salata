//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("TopCoderPrototypeModel", "FK_Competitions_Categories", "Categories", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrototypeTopCoder.Category), "Competitions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrototypeTopCoder.Competition), true)]
[assembly: EdmRelationshipAttribute("TopCoderPrototypeModel", "FK_CompetetionsProblems_Competitions", "Competitions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrototypeTopCoder.Competition), "CompetetionsProblems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrototypeTopCoder.CompetetionsProblem), true)]
[assembly: EdmRelationshipAttribute("TopCoderPrototypeModel", "FK_CompetetionsProblems_Problems", "Problems", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrototypeTopCoder.Problem), "CompetetionsProblems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrototypeTopCoder.CompetetionsProblem), true)]
[assembly: EdmRelationshipAttribute("TopCoderPrototypeModel", "FK_CompetitionsUsers_Competitions", "Competitions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrototypeTopCoder.Competition), "CompetitionsUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrototypeTopCoder.CompetitionsUser), true)]
[assembly: EdmRelationshipAttribute("TopCoderPrototypeModel", "FK_CompetitionsUsers_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrototypeTopCoder.User), "CompetitionsUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrototypeTopCoder.CompetitionsUser), true)]
[assembly: EdmRelationshipAttribute("TopCoderPrototypeModel", "FK_Submissions_Problems", "Problems", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrototypeTopCoder.Problem), "Submissions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrototypeTopCoder.Submission), true)]
[assembly: EdmRelationshipAttribute("TopCoderPrototypeModel", "FK_Submissions_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrototypeTopCoder.User), "Submissions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrototypeTopCoder.Submission), true)]

#endregion

namespace PrototypeTopCoder
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class TopCoderPrototypeEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new TopCoderPrototypeEntities object using the connection string found in the 'TopCoderPrototypeEntities' section of the application configuration file.
        /// </summary>
        public TopCoderPrototypeEntities() : base("name=TopCoderPrototypeEntities", "TopCoderPrototypeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TopCoderPrototypeEntities object.
        /// </summary>
        public TopCoderPrototypeEntities(string connectionString) : base(connectionString, "TopCoderPrototypeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TopCoderPrototypeEntities object.
        /// </summary>
        public TopCoderPrototypeEntities(EntityConnection connection) : base(connection, "TopCoderPrototypeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompetetionsProblem> CompetetionsProblems
        {
            get
            {
                if ((_CompetetionsProblems == null))
                {
                    _CompetetionsProblems = base.CreateObjectSet<CompetetionsProblem>("CompetetionsProblems");
                }
                return _CompetetionsProblems;
            }
        }
        private ObjectSet<CompetetionsProblem> _CompetetionsProblems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Competition> Competitions
        {
            get
            {
                if ((_Competitions == null))
                {
                    _Competitions = base.CreateObjectSet<Competition>("Competitions");
                }
                return _Competitions;
            }
        }
        private ObjectSet<Competition> _Competitions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompetitionsUser> CompetitionsUsers
        {
            get
            {
                if ((_CompetitionsUsers == null))
                {
                    _CompetitionsUsers = base.CreateObjectSet<CompetitionsUser>("CompetitionsUsers");
                }
                return _CompetitionsUsers;
            }
        }
        private ObjectSet<CompetitionsUser> _CompetitionsUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Problem> Problems
        {
            get
            {
                if ((_Problems == null))
                {
                    _Problems = base.CreateObjectSet<Problem>("Problems");
                }
                return _Problems;
            }
        }
        private ObjectSet<Problem> _Problems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Submission> Submissions
        {
            get
            {
                if ((_Submissions == null))
                {
                    _Submissions = base.CreateObjectSet<Submission>("Submissions");
                }
                return _Submissions;
            }
        }
        private ObjectSet<Submission> _Submissions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompetetionsProblems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompetetionsProblems(CompetetionsProblem competetionsProblem)
        {
            base.AddObject("CompetetionsProblems", competetionsProblem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Competitions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompetitions(Competition competition)
        {
            base.AddObject("Competitions", competition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompetitionsUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompetitionsUsers(CompetitionsUser competitionsUser)
        {
            base.AddObject("CompetitionsUsers", competitionsUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Problems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProblems(Problem problem)
        {
            base.AddObject("Problems", problem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Submissions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubmissions(Submission submission)
        {
            base.AddObject("Submissions", submission);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TopCoderPrototypeModel", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Category CreateCategory(global::System.Int32 id, global::System.String name)
        {
            Category category = new Category();
            category.ID = id;
            category.Name = name;
            return category;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TopCoderPrototypeModel", "FK_Competitions_Categories", "Competitions")]
        public EntityCollection<Competition> Competitions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Competition>("TopCoderPrototypeModel.FK_Competitions_Categories", "Competitions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Competition>("TopCoderPrototypeModel.FK_Competitions_Categories", "Competitions", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TopCoderPrototypeModel", Name="CompetetionsProblem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompetetionsProblem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompetetionsProblem object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="competetionId">Initial value of the CompetetionId property.</param>
        /// <param name="problemId">Initial value of the ProblemId property.</param>
        public static CompetetionsProblem CreateCompetetionsProblem(global::System.Int32 id, global::System.Int32 competetionId, global::System.Int32 problemId)
        {
            CompetetionsProblem competetionsProblem = new CompetetionsProblem();
            competetionsProblem.ID = id;
            competetionsProblem.CompetetionId = competetionId;
            competetionsProblem.ProblemId = problemId;
            return competetionsProblem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompetetionId
        {
            get
            {
                return _CompetetionId;
            }
            set
            {
                OnCompetetionIdChanging(value);
                ReportPropertyChanging("CompetetionId");
                _CompetetionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompetetionId");
                OnCompetetionIdChanged();
            }
        }
        private global::System.Int32 _CompetetionId;
        partial void OnCompetetionIdChanging(global::System.Int32 value);
        partial void OnCompetetionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProblemId
        {
            get
            {
                return _ProblemId;
            }
            set
            {
                OnProblemIdChanging(value);
                ReportPropertyChanging("ProblemId");
                _ProblemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProblemId");
                OnProblemIdChanged();
            }
        }
        private global::System.Int32 _ProblemId;
        partial void OnProblemIdChanging(global::System.Int32 value);
        partial void OnProblemIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TopCoderPrototypeModel", "FK_CompetetionsProblems_Competitions", "Competitions")]
        public Competition Competition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Competition>("TopCoderPrototypeModel.FK_CompetetionsProblems_Competitions", "Competitions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Competition>("TopCoderPrototypeModel.FK_CompetetionsProblems_Competitions", "Competitions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Competition> CompetitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Competition>("TopCoderPrototypeModel.FK_CompetetionsProblems_Competitions", "Competitions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Competition>("TopCoderPrototypeModel.FK_CompetetionsProblems_Competitions", "Competitions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TopCoderPrototypeModel", "FK_CompetetionsProblems_Problems", "Problems")]
        public Problem Problem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Problem>("TopCoderPrototypeModel.FK_CompetetionsProblems_Problems", "Problems").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Problem>("TopCoderPrototypeModel.FK_CompetetionsProblems_Problems", "Problems").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Problem> ProblemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Problem>("TopCoderPrototypeModel.FK_CompetetionsProblems_Problems", "Problems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Problem>("TopCoderPrototypeModel.FK_CompetetionsProblems_Problems", "Problems", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TopCoderPrototypeModel", Name="Competition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Competition : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Competition object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        /// <param name="start">Initial value of the Start property.</param>
        /// <param name="end">Initial value of the End property.</param>
        /// <param name="duration">Initial value of the Duration property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Competition CreateCompetition(global::System.Int32 id, global::System.Int32 categoryId, global::System.DateTime start, global::System.DateTime end, global::System.Int32 duration, global::System.String name)
        {
            Competition competition = new Competition();
            competition.ID = id;
            competition.CategoryId = categoryId;
            competition.Start = start;
            competition.End = end;
            competition.Duration = duration;
            competition.Name = name;
            return competition;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Start
        {
            get
            {
                return _Start;
            }
            set
            {
                OnStartChanging(value);
                ReportPropertyChanging("Start");
                _Start = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Start");
                OnStartChanged();
            }
        }
        private global::System.DateTime _Start;
        partial void OnStartChanging(global::System.DateTime value);
        partial void OnStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime End
        {
            get
            {
                return _End;
            }
            set
            {
                OnEndChanging(value);
                ReportPropertyChanging("End");
                _End = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("End");
                OnEndChanged();
            }
        }
        private global::System.DateTime _End;
        partial void OnEndChanging(global::System.DateTime value);
        partial void OnEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Duration
        {
            get
            {
                return _Duration;
            }
            set
            {
                OnDurationChanging(value);
                ReportPropertyChanging("Duration");
                _Duration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Duration");
                OnDurationChanged();
            }
        }
        private global::System.Int32 _Duration;
        partial void OnDurationChanging(global::System.Int32 value);
        partial void OnDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TopCoderPrototypeModel", "FK_Competitions_Categories", "Categories")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("TopCoderPrototypeModel.FK_Competitions_Categories", "Categories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("TopCoderPrototypeModel.FK_Competitions_Categories", "Categories").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("TopCoderPrototypeModel.FK_Competitions_Categories", "Categories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("TopCoderPrototypeModel.FK_Competitions_Categories", "Categories", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TopCoderPrototypeModel", "FK_CompetetionsProblems_Competitions", "CompetetionsProblems")]
        public EntityCollection<CompetetionsProblem> CompetetionsProblems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompetetionsProblem>("TopCoderPrototypeModel.FK_CompetetionsProblems_Competitions", "CompetetionsProblems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompetetionsProblem>("TopCoderPrototypeModel.FK_CompetetionsProblems_Competitions", "CompetetionsProblems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TopCoderPrototypeModel", "FK_CompetitionsUsers_Competitions", "CompetitionsUsers")]
        public EntityCollection<CompetitionsUser> CompetitionsUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompetitionsUser>("TopCoderPrototypeModel.FK_CompetitionsUsers_Competitions", "CompetitionsUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompetitionsUser>("TopCoderPrototypeModel.FK_CompetitionsUsers_Competitions", "CompetitionsUsers", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TopCoderPrototypeModel", Name="CompetitionsUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompetitionsUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompetitionsUser object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="competitionId">Initial value of the CompetitionId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="start">Initial value of the Start property.</param>
        public static CompetitionsUser CreateCompetitionsUser(global::System.Int32 id, global::System.Int32 competitionId, global::System.Int32 userId, global::System.DateTime start)
        {
            CompetitionsUser competitionsUser = new CompetitionsUser();
            competitionsUser.ID = id;
            competitionsUser.CompetitionId = competitionId;
            competitionsUser.UserId = userId;
            competitionsUser.Start = start;
            return competitionsUser;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompetitionId
        {
            get
            {
                return _CompetitionId;
            }
            set
            {
                OnCompetitionIdChanging(value);
                ReportPropertyChanging("CompetitionId");
                _CompetitionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompetitionId");
                OnCompetitionIdChanged();
            }
        }
        private global::System.Int32 _CompetitionId;
        partial void OnCompetitionIdChanging(global::System.Int32 value);
        partial void OnCompetitionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Start
        {
            get
            {
                return _Start;
            }
            set
            {
                OnStartChanging(value);
                ReportPropertyChanging("Start");
                _Start = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Start");
                OnStartChanged();
            }
        }
        private global::System.DateTime _Start;
        partial void OnStartChanging(global::System.DateTime value);
        partial void OnStartChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TopCoderPrototypeModel", "FK_CompetitionsUsers_Competitions", "Competitions")]
        public Competition Competition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Competition>("TopCoderPrototypeModel.FK_CompetitionsUsers_Competitions", "Competitions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Competition>("TopCoderPrototypeModel.FK_CompetitionsUsers_Competitions", "Competitions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Competition> CompetitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Competition>("TopCoderPrototypeModel.FK_CompetitionsUsers_Competitions", "Competitions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Competition>("TopCoderPrototypeModel.FK_CompetitionsUsers_Competitions", "Competitions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TopCoderPrototypeModel", "FK_CompetitionsUsers_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TopCoderPrototypeModel.FK_CompetitionsUsers_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TopCoderPrototypeModel.FK_CompetitionsUsers_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TopCoderPrototypeModel.FK_CompetitionsUsers_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("TopCoderPrototypeModel.FK_CompetitionsUsers_Users", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TopCoderPrototypeModel", Name="Problem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Problem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Problem object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="competitionId">Initial value of the CompetitionId property.</param>
        /// <param name="authorId">Initial value of the AuthorId property.</param>
        /// <param name="data">Initial value of the Data property.</param>
        public static Problem CreateProblem(global::System.Int32 id, global::System.Int32 competitionId, global::System.Int32 authorId, global::System.Byte[] data)
        {
            Problem problem = new Problem();
            problem.ID = id;
            problem.CompetitionId = competitionId;
            problem.AuthorId = authorId;
            problem.Data = data;
            return problem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompetitionId
        {
            get
            {
                return _CompetitionId;
            }
            set
            {
                OnCompetitionIdChanging(value);
                ReportPropertyChanging("CompetitionId");
                _CompetitionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompetitionId");
                OnCompetitionIdChanged();
            }
        }
        private global::System.Int32 _CompetitionId;
        partial void OnCompetitionIdChanging(global::System.Int32 value);
        partial void OnCompetitionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AuthorId
        {
            get
            {
                return _AuthorId;
            }
            set
            {
                OnAuthorIdChanging(value);
                ReportPropertyChanging("AuthorId");
                _AuthorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AuthorId");
                OnAuthorIdChanged();
            }
        }
        private global::System.Int32 _AuthorId;
        partial void OnAuthorIdChanging(global::System.Int32 value);
        partial void OnAuthorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Data
        {
            get
            {
                return StructuralObject.GetValidValue(_Data);
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.Byte[] _Data;
        partial void OnDataChanging(global::System.Byte[] value);
        partial void OnDataChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TopCoderPrototypeModel", "FK_CompetetionsProblems_Problems", "CompetetionsProblems")]
        public EntityCollection<CompetetionsProblem> CompetetionsProblems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompetetionsProblem>("TopCoderPrototypeModel.FK_CompetetionsProblems_Problems", "CompetetionsProblems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompetetionsProblem>("TopCoderPrototypeModel.FK_CompetetionsProblems_Problems", "CompetetionsProblems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TopCoderPrototypeModel", "FK_Submissions_Problems", "Submissions")]
        public EntityCollection<Submission> Submissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Submission>("TopCoderPrototypeModel.FK_Submissions_Problems", "Submissions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Submission>("TopCoderPrototypeModel.FK_Submissions_Problems", "Submissions", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TopCoderPrototypeModel", Name="Submission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Submission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Submission object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="problemId">Initial value of the ProblemId property.</param>
        /// <param name="start">Initial value of the Start property.</param>
        /// <param name="isReady">Initial value of the IsReady property.</param>
        public static Submission CreateSubmission(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 problemId, global::System.DateTime start, global::System.Boolean isReady)
        {
            Submission submission = new Submission();
            submission.ID = id;
            submission.UserId = userId;
            submission.ProblemId = problemId;
            submission.Start = start;
            submission.IsReady = isReady;
            return submission;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProblemId
        {
            get
            {
                return _ProblemId;
            }
            set
            {
                OnProblemIdChanging(value);
                ReportPropertyChanging("ProblemId");
                _ProblemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProblemId");
                OnProblemIdChanged();
            }
        }
        private global::System.Int32 _ProblemId;
        partial void OnProblemIdChanging(global::System.Int32 value);
        partial void OnProblemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Start
        {
            get
            {
                return _Start;
            }
            set
            {
                OnStartChanging(value);
                ReportPropertyChanging("Start");
                _Start = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Start");
                OnStartChanged();
            }
        }
        private global::System.DateTime _Start;
        partial void OnStartChanging(global::System.DateTime value);
        partial void OnStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsReady
        {
            get
            {
                return _IsReady;
            }
            set
            {
                OnIsReadyChanging(value);
                ReportPropertyChanging("IsReady");
                _IsReady = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsReady");
                OnIsReadyChanged();
            }
        }
        private global::System.Boolean _IsReady;
        partial void OnIsReadyChanging(global::System.Boolean value);
        partial void OnIsReadyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Answer
        {
            get
            {
                return StructuralObject.GetValidValue(_Answer);
            }
            set
            {
                OnAnswerChanging(value);
                ReportPropertyChanging("Answer");
                _Answer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Answer");
                OnAnswerChanged();
            }
        }
        private global::System.Byte[] _Answer;
        partial void OnAnswerChanging(global::System.Byte[] value);
        partial void OnAnswerChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TopCoderPrototypeModel", "FK_Submissions_Problems", "Problems")]
        public Problem Problem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Problem>("TopCoderPrototypeModel.FK_Submissions_Problems", "Problems").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Problem>("TopCoderPrototypeModel.FK_Submissions_Problems", "Problems").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Problem> ProblemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Problem>("TopCoderPrototypeModel.FK_Submissions_Problems", "Problems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Problem>("TopCoderPrototypeModel.FK_Submissions_Problems", "Problems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TopCoderPrototypeModel", "FK_Submissions_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TopCoderPrototypeModel.FK_Submissions_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TopCoderPrototypeModel.FK_Submissions_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TopCoderPrototypeModel.FK_Submissions_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("TopCoderPrototypeModel.FK_Submissions_Users", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TopCoderPrototypeModel", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TopCoderPrototypeModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String username, global::System.String password, global::System.Int32 type, global::System.String email)
        {
            User user = new User();
            user.ID = id;
            user.Username = username;
            user.Password = password;
            user.Type = type;
            user.Email = email;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int32 _Type;
        partial void OnTypeChanging(global::System.Int32 value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JobTitle
        {
            get
            {
                return _JobTitle;
            }
            set
            {
                OnJobTitleChanging(value);
                ReportPropertyChanging("JobTitle");
                _JobTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JobTitle");
                OnJobTitleChanged();
            }
        }
        private global::System.String _JobTitle;
        partial void OnJobTitleChanging(global::System.String value);
        partial void OnJobTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Education
        {
            get
            {
                return _Education;
            }
            set
            {
                OnEducationChanging(value);
                ReportPropertyChanging("Education");
                _Education = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Education");
                OnEducationChanged();
            }
        }
        private global::System.String _Education;
        partial void OnEducationChanging(global::System.String value);
        partial void OnEducationChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TopCoderPrototypeModel", "FK_CompetitionsUsers_Users", "CompetitionsUsers")]
        public EntityCollection<CompetitionsUser> CompetitionsUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompetitionsUser>("TopCoderPrototypeModel.FK_CompetitionsUsers_Users", "CompetitionsUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompetitionsUser>("TopCoderPrototypeModel.FK_CompetitionsUsers_Users", "CompetitionsUsers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TopCoderPrototypeModel", "FK_Submissions_Users", "Submissions")]
        public EntityCollection<Submission> Submissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Submission>("TopCoderPrototypeModel.FK_Submissions_Users", "Submissions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Submission>("TopCoderPrototypeModel.FK_Submissions_Users", "Submissions", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
